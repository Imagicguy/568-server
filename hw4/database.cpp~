#include "database.h"

void resetTable(connection *C) {
  if (C->is_open()) {
    work dropTable(*C);
    dropTable.exec("DROP TABLE IF EXISTS PLAYER;");
    dropTable.exec("DROP TABLE IF EXISTS TEAM;");
    dropTable.exec("DROP TABLE IF EXISTS STATE;");
    dropTable.exec("DROP TABLE IF EXISTS COLOR;");
    dropTable.commit();
    cout << "resetTable succeed!" << endl;
  }

  std::string playerTable, teamTable, colorTable, stateTable;
  teamTable = "CREATE TABLE TEAM("
              "TEAM_ID  SERIAL PRIMARY KEY                  NOT NULL,"
              "NAME     TEXT                             NOT NULL,"
              "STATE_ID INT REFERENCES STATE(STATE_ID)   NOT NULL,"
              "COLOR_ID INT REFERENCES COLOR(COLOR_ID)   NOT NULL,"
              "WINS     INT                              NOT NULL,"
              "LOSSES   INT                              NOT NULL);";
  playerTable = "CREATE TABLE PLAYER("
                "PLAYER_ID   SERIAL PRIMARY KEY               NOT NULL,"
                "TEAM_ID     INT REFERENCES TEAM(TEAM_ID)  NOT NULL,"
                "UNIFORM_NUM INT                           NOT NULL,"
                "FIRST_NAME  TEXT                          NOT NULL,"
                "LAST_NAME   TEXT                          NOT NULL,"
                "MPG         INT                           NOT NULL,"
                "PPG         INT                           NOT NULL,"
                "RPG         INT                           NOT NULL,"
                "APG         INT                           NOT NULL,"
                "SPG         DOUBLE PRECISION              NOT NULL,"
                "BPG         DOUBLE PRECISION              NOT NULL);";
  stateTable = "CREATE TABLE STATE("
               "STATE_ID SERIAL PRIMARY KEY                  NOT NULL,"
               "NAME                 TEXT                 NOT NULL);";
  colorTable = "CREATE TABLE COLOR("
               "COLOR_ID SERIAL PRIMARY KEY                  NOT NULL,"
               "NAME                 TEXT                 NOT NULL);";

  work createTable(*C);
  createTable.exec(stateTable);
  createTable.exec(colorTable);
  createTable.exec(teamTable);
  createTable.exec(playerTable);
  createTable.commit();
  cout << "createTable succeed!" << endl;
}
